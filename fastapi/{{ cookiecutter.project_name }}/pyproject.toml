[tool.poetry]
name = "{{cookiecutter.project_name}}"
version = "0.1"
description = "{{cookiecutter.description}}"
authors = ["{{cookiecutter.full_name}} <{{cookiecutter.email}}>"]

[tool.poetry.dependencies]
python = "^3.9"
fastapi = ">0.68.0"
gunicorn = "^20.1.0"
uvicorn = {extras = ["standard"], version = "^0.15.0"}
sentry-sdk = "^1.3.1"
fastapi-azure-auth = "^3.0.3"
aioredis = "^2.0.0"
fastapi-cache2 = "^0.1.6"
{% if cookiecutter.sqlmodel == 'True' %}
alembic = "^1.7.4"
sqlmodel = "^0.0.4"
asyncpg = "^0.24.0"
{% endif %}

[tool.poetry.dev-dependencies]
aioresponses = "^0.7.2"
black = "^21.7b0"
coverage = {version = "^5.5", extras = ["toml"]}
httpx = "^0.20.0"
isort = "^5.9.3"
pre-commit = "^2.14.0"
pytest = "^6.2.4"
pytest-asyncio = "^0.15.1"
pytest-cov = "^2.12.1"
pytest-env = "^0.6.2"
pytest-mock = "^3.6.1"
pytest-socket = "^0.4.0"
pytest-xdist = {version = "^2.3.0", extras = ["psutil"]}
requests = "^2.26.0"

[tool.black]
line-length = 120
skip-string-normalization = true
target-version = ['py38']
include = '\.pyi?$'
exclude = '''
(
    (\.eggs|\.git|\.hg|\.mypy_cache|\.tox|\.venv|\venv|\.github|\docs|\tests|\__pycache__)
)
'''

[tool.isort]
profile = "black"
src_paths = ["app"]
combine_as_imports = true
line_length = 120
sections = [
    'FUTURE',
    'STDLIB',
    'THIRDPARTY',
    'FIRSTPARTY',
    'LOCALFOLDER',
]

[tool.coverage.run]
source = ["app"]

[tool.coverage.report]
show_missing = true
skip_covered = true

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
