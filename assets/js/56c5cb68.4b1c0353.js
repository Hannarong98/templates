"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[6858],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return d}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),s=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),m=s(n),d=a,h=m["".concat(p,".").concat(d)]||m[d]||c[d]||o;return n?r.createElement(h,l(l({ref:t},u),{},{components:n})):r.createElement(h,l({ref:t},u))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,l=new Array(o);l[0]=m;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:a,l[1]=i;for(var s=2;s<o;s++)l[s]=n[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5565:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return i},contentTitle:function(){return p},metadata:function(){return s},toc:function(){return u},default:function(){return m}});var r=n(3117),a=n(102),o=(n(7294),n(3905)),l=["components"],i={title:"Security - HTTP",sidebar_label:"HTTP",slug:"/API/Security/HTTP",sidebar_position:4},p=void 0,s={unversionedId:"API/Security/HTTP",id:"API/Security/HTTP",title:"Security - HTTP",description:"There are many ways to secure your HTTP Traffic. In this section we will explore some tools/middlewares we can use to secure the incoming traffic.",source:"@site/express/API/Security/HTTP.mdx",sourceDirName:"API/Security",slug:"/API/Security/HTTP",permalink:"/express/API/Security/HTTP",editUrl:"https://github.com/Intility/templates/tree/main/docusaurus/express/API/Security/HTTP.mdx",tags:[],version:"current",sidebarPosition:4,frontMatter:{title:"Security - HTTP",sidebar_label:"HTTP",slug:"/API/Security/HTTP",sidebar_position:4},sidebar:"express",previous:{title:"CORS",permalink:"/express/API/Security/CORS"},next:{title:"Starting a new project",permalink:"/express/TypeScript/Starting-a-new-project"}},u=[{value:"Security Headers",id:"security-headers",children:[],level:2},{value:"HTTP Parameter Pollution (HPP)",id:"http-parameter-pollution-hpp",children:[],level:2},{value:"HTTP Content Length validation",id:"http-content-length-validation",children:[],level:2}],c={toc:u};function m(e){var t=e.components,n=(0,a.Z)(e,l);return(0,o.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"There are many ways to secure your HTTP Traffic. In this section we will explore some tools/middlewares we can use to secure the incoming traffic."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"NOTE: It's not a silver bullet, but these can help you secure your traffic a bit!")),(0,o.kt)("h2",{id:"security-headers"},"Security Headers"),(0,o.kt)("p",null,"Helmet is a tool to help you secure your Express app by applying various HTTP headers aimed at securing your API against known HTTP vulnerabilities."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://www.npmjs.com/package/helmet"},"helmet")," - Helmet main package")),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"npm install helmet")),(0,o.kt)("p",null,"In your app.ts"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'import helmet from "helmet";\n\n//const app = express();\n\napp.use(helmet());\n\n// rest of config\n')),(0,o.kt)("p",null,"To read more about helmet, please have a look at the documentation located at the README of the project."),(0,o.kt)("h2",{id:"http-parameter-pollution-hpp"},"HTTP Parameter Pollution (HPP)"),(0,o.kt)("p",null,"HPP is a tool to help you secure your Express app by protecting against HTTP Parameter Pollution attacks."),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"HTTP Parameter Pollution, or HPP, is a vulnerability that occurs due to the passing of multiple parameters having the same name. There is no RFC standard on what should be done when it has passed multiple parameters. This vulnerability was first discovered in 2009. HPP could be used for cross channel pollution, bypassing CSRF protection and WAF input validation checks.")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://www.npmjs.com/package/hpp"},"hpp")," - HPP main package")),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"npm install hpp")),(0,o.kt)("p",null,"In your app.ts"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'import hpp from "hpp";\n\n//const app = express();\napp.use(bodyParser.urlencoded()); // Make sure the body is parsed beforehand.\napp.use(hpp());\n\n// rest of config\n')),(0,o.kt)("p",null,"To read more about helmet, please have a look at the documentation located at the README of the project."),(0,o.kt)("h2",{id:"http-content-length-validation"},"HTTP Content Length validation"),(0,o.kt)("p",null,"To not have your application vulnerable to large payload attacks you can restrict the maximum allowed payload size for incoming requests."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://www.npmjs.com/package/express-content-length-validator"},"express-content-length-validator")," - Express Content Length Validator main package")),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"npm install express-content-length-validator")),(0,o.kt)("p",null,"In your app.ts"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"import contentLength from 'express-content-length-validator';\n\n//const app = express();\nconst MAX_CONTENT_LENGTH_ACCEPTED = 1048576; // 1MB\n\napp.use(contentLength.validateMax({max: MAX_CONTENT_LENGTH_ACCEPTED, status: 413, message: \"Payload Too Large\"}));\n\n// rest of config\n")))}m.isMDXComponent=!0}}]);