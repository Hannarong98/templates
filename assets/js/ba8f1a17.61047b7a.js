(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[938],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return c},kt:function(){return d}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=p(n),d=o,f=m["".concat(s,".").concat(d)]||m[d]||u[d]||a;return n?r.createElement(f,i(i({ref:t},c),{},{components:n})):r.createElement(f,i({ref:t},c))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var p=2;p<a;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},799:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return i},metadata:function(){return l},toc:function(){return s},default:function(){return c}});var r=n(2122),o=n(9756),a=(n(7294),n(3905)),i={title:"Installation",sidebar_position:1},l={unversionedId:"getting-started/installation",id:"getting-started/installation",isDocsHomePage:!1,title:"Installation",description:"First and foremost make sure you have installed the official dotnet SDK version 5 or above.",source:"@site/dotnet/getting-started/installation.mdx",sourceDirName:"getting-started",slug:"/getting-started/installation",permalink:"/dotnet/getting-started/installation",editUrl:"https://github.com/Intility/templates/tree/main/docusaurus/dotnet/getting-started/installation.mdx",version:"current",sidebarPosition:1,frontMatter:{title:"Installation",sidebar_position:1},sidebar:"cra",previous:{title:".NET Templates",permalink:"/dotnet/"},next:{title:"Features",permalink:"/dotnet/getting-started/features"}},s=[{value:"Bootstrap new project using the template",id:"bootstrap-new-project-using-the-template",children:[]}],p={toc:s};function c(e){var t=e.components,n=(0,o.Z)(e,["components"]);return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"First and foremost make sure you have installed the ",(0,a.kt)("a",{parentName:"p",href:"https://dotnet.microsoft.com/download"},"official dotnet SDK")," version 5 or above."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"#install intility templates\ndotnet new --install Intility.Templates\n")),(0,a.kt)("p",null,"New templates should now be available to bootstrap new projects from. Use ",(0,a.kt)("inlineCode",{parentName:"p"},"dotnet new --list")," to see available templates"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"  Templates                                                   Short Name           Language    Tags\n  -------------------------------------------------  -------------------  ----------  ----------------------\n  Console Application                                console              [C#],F#,VB  Common/Console\n  Class library                                      classlib             [C#],F#,VB  Common/Library\n  Worker Service                                     worker               [C#],F#     Common/Worker/Web\n> Intility Api (Solution)                            iwebapi              [C#]        Intility/Web/WebAPI\n> Intility Api (Project)                             iwebapiproject       [C#]        Intility/Web/WebAPI\n  xUnit Test Project                                 xunit                [C#],F#,VB  Test/xUnit\n  Razor Component                                    razorcomponent       [C#]        Web/ASP.NET\n  Razor Page                                         page                 [C#]        Web/ASP.NET\n  #...\n")),(0,a.kt)("p",null,"You will immediately notice the two projects ",(0,a.kt)("inlineCode",{parentName:"p"},"iwebapi")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"iwebapiproject"),". These projects reperesent the same starting point, but\none comes with a solution file and one does not. This is currently the best way to provide templates for both scenarios - wether you're\nstarting from scratch or already have a solution going."),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"\u26a0\ufe0f ",(0,a.kt)("strong",{parentName:"p"},"NOTE")),(0,a.kt)("p",{parentName:"blockquote"},"These projects will most likely merge into one if or when the dotnet template tooling supports post-scripts that allows us to move files post installtion.")),(0,a.kt)("h2",{id:"bootstrap-new-project-using-the-template"},"Bootstrap new project using the template"),(0,a.kt)("p",null,"You can either use the ",(0,a.kt)("inlineCode",{parentName:"p"},"dotnet new")," command or Visual Studio -> New Project wizard to create a new project based on the templates."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"# create project\ndotnet new iwebapi -o MyService\n\n# run project\ncd MyService\ndotnet run --project MyService/MyService.csproj\n")))}c.isMDXComponent=!0}}]);