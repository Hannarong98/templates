"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[4795],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return d}});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=r.createContext({}),g=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},c=function(e){var t=g(e.components);return r.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=g(n),d=i,m=u["".concat(s,".").concat(d)]||u[d]||p[d]||o;return n?r.createElement(m,a(a({ref:t},c),{},{components:n})):r.createElement(m,a({ref:t},c))}));function d(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:i,a[1]=l;for(var g=2;g<o;g++)a[g]=n[g];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},4317:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return g},metadata:function(){return c},Highlight:function(){return p},toc:function(){return u},default:function(){return m}});var r=n(3117),i=n(102),o=(n(7294),n(3905)),a=n(8517),l=["components"],s={title:"Logging",sidebar_position:2},g=void 0,c={unversionedId:"topics/logging",id:"topics/logging",title:"Logging",description:"Logging is provided by the external package Intility.Logging.AspNetCore in conjunction with logger sink extensions.",source:"@site/dotnet/topics/logging.mdx",sourceDirName:"topics",slug:"/topics/logging",permalink:"/dotnet/topics/logging",editUrl:"https://github.com/Intility/templates/tree/main/docusaurus/dotnet/topics/logging.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"Logging",sidebar_position:2},sidebar:"cra",previous:{title:"Configuration",permalink:"/dotnet/topics/configuration"},next:{title:"Adding Environments",permalink:"/dotnet/advanced/adding-environments"}},p=function(e){var t=e.children,n=e.bg,r=e.title;return(0,o.kt)("div",{style:{padding:"0.5rem",borderLeft:"10px solid "+n,margin:"0"}},(0,o.kt)("span",{style:{paddingRight:".2rem"}},(0,o.kt)("strong",null,r),":"),t)},u=[{value:"Creating Logs",id:"creating-logs",children:[],level:2},{value:"Structured Logging",id:"structured-logging",children:[],level:2},{value:"Scoping",id:"scoping",children:[],level:2},{value:"Configure Logging",id:"configure-logging",children:[],level:2}],d={Highlight:p,toc:u};function m(e){var t=e.components,n=(0,i.Z)(e,l);return(0,o.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Logging is provided by the external package ",(0,o.kt)("inlineCode",{parentName:"p"},"Intility.Logging.AspNetCore")," in conjunction with logger sink extensions.\nThe goal with the external packages is to enable continuous development of logging support centrally,\nas the infrastructure changes over time, alleviating you of this burden. The packages are realying heavily on the\nlogging infrastructure provided by the dotnet runtime."),(0,o.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"Logging packages are maintained at ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/Intility/Intility.Logging"},"github.com/intility/intility.logging")))),(0,o.kt)("h2",{id:"creating-logs"},"Creating Logs"),(0,o.kt)("p",null,"To create logs, use an ",(0,o.kt)("inlineCode",{parentName:"p"},"ILogger<TCategoryName>")," object from dependency injection (DI)."),(0,o.kt)("p",null,"Let's take a look at the following example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp"},'[ApiController]\n[Route("[controller]")]\npublic class CustomerController : ControllerBase\n{\n    private readonly ILogger _logger;\n\n    public CustomerController(ILogger<CustomerController> logger)\n    {\n        _logger = logger;\n    }\n\n    [HttpPost]\n    public ActionResult<Customer> Create(CreateCustomerDTO createCustomerDto)\n    {\n        _logger.LogInformation(\n            "Customer endpoint called at {Timestamp}", \n            DateTime.UtcNow.ToLongTimeString());\n\n        //...\n    }\n}\n')),(0,o.kt)("p",null,"The DI system creates a logger and injects it into the controller. In this example the logger uses a log\ncategory of the fully qualified name of the type ",(0,o.kt)("inlineCode",{parentName:"p"},"CustomerController"),". The log category is a string that\nis associated with each log entry and makes it easier to troubleshoot large quantities of logs."),(0,o.kt)("p",null,"One can also observe that we are logging with the ",(0,o.kt)("inlineCode",{parentName:"p"},"LogInformation")," extension method. ",(0,o.kt)("inlineCode",{parentName:"p"},"Information")," is one of\nseveral log levels available - ordered by criticality:"),(0,o.kt)("div",{style:{marginBottom:"1rem"}},(0,o.kt)(p,{bg:"#f0f0f0",title:"Debug",mdxType:"Highlight"},"General debug information used in development environments with high verbosity"),(0,o.kt)(p,{bg:"#ccc",title:"Trace",mdxType:"Highlight"}," Events related to code performance and infrastructure"),(0,o.kt)(p,{bg:"var(--ifm-color-info)",title:"Information",mdxType:"Highlight"},"Low criticality application information"),(0,o.kt)(p,{bg:"var(--ifm-color-warning)",title:"Warning",mdxType:"Highlight"},"Medium criticality information and recoverable exceptions"),(0,o.kt)(p,{bg:"var(--ifm-color-danger)",title:"Error",mdxType:"Highlight"},"Hight criticality information about non-recoverable exceptions and faulty states"),(0,o.kt)(p,{bg:"var(--ifm-color-danger-darkest)",title:"Critical",mdxType:"Highlight"},"Severely critical messages related to crashes where the process cannot recover")),(0,o.kt)("h2",{id:"structured-logging"},"Structured Logging"),(0,o.kt)("p",null,"In addition to the message we are also taking advantage of the structured logging capabilities baked into the logger. This means\nthat we can inject arbitrary metadata surrounding our log events to make troubleshooting even easier. In the example above we are\ninjecting the current timestamp into a property called ",(0,o.kt)("inlineCode",{parentName:"p"},"Timestamp"),". "),(0,o.kt)("p",null,"Further more, we can also pass inn serializable objects like reference types or records. Serilog will automatically serialize the\nproperties for you. Note that you have to prefix your property name with an ",(0,o.kt)("inlineCode",{parentName:"p"},"@")," symbol for this serialization to take place"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp"},'var albert = new { Name = "Albert Aaberg" };\nlogger.LogWarning("Could not find any friends of {@User}", albert);\n')),(0,o.kt)("h2",{id:"scoping"},"Scoping"),(0,o.kt)("p",null,"It is sometimes useful to attach common metadata to a series of log events in your application instead of placing them separately\nin the log message itself."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp"},'var props = new Dictionary<string,object>()\n{\n    { "Name", "Albert Aaberg"},\n    { "Friends", 0 }\n};\n\nusing(logger.BeginScope(props))\n{\n    logger.LogInformation("Every log message inside this scope has metadata attached");\n}\n\nlogger.LogInformation("The props has left the building");\n')),(0,o.kt)("img",{src:"/img/logging-scoped-props.png",alt:"scoped props result"}),(0,o.kt)("h2",{id:"configure-logging"},"Configure Logging"),(0,o.kt)("p",null,"With the serilog configuration it is possible to override the verbosity of the logs for each namespace separately.\nVery useful if you need to up the verbosity of your own code without clutter. "),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"NB: The overrides should always be stricter than the default MinimumLevel.")),(0,o.kt)("p",null,"There is also a very handy ",(0,o.kt)("inlineCode",{parentName:"p"},"Properties")," section that lets you define custom metadata surrounding all your log events.\nThe application host can also inject additional context to your logs through environment variables through the same\nconfiguration infrastructure."),(0,o.kt)("p",null,"Configuration is usually provided by the Serilog section of the ",(0,o.kt)("inlineCode",{parentName:"p"},"appsettings.{Environment}.json")," files.\nThe following appsettings.json file is generated by the template."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "Serilog": {\n    "MinimumLevel": {\n      "Default": "Information",\n      "Override": {\n        "System": "Warning",\n        "Microsoft": "Warning",\n        "Microsoft.Hosting.Lifetime": "Error"\n      }\n    },\n    "Properties": {\n        "Application": "MyService"\n    }\n}\n')),(0,o.kt)("p",null,"You can read more about logging at the official .NET Core documentation and by visiting the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/serilog/serilog-settings-configuration"},"Serilog documentation")," for a complete overview of the configuration capabilities."),(0,o.kt)("div",{style:{marginBottom:"20px"}},(0,o.kt)(a.Z,{width:"380px",title:"Logging in .NET Core and ASP.NET Core",subtitle:"~55 minutes to read",url:"https://docs.microsoft.com/en-us/aspnet/core/fundamentals/logging/?view=aspnetcore-5.0",mdxType:"MsDocsCard"})))}m.isMDXComponent=!0},8517:function(e,t,n){n.d(t,{Z:function(){return o}});var r=n(7294);function i(e){var t=e.width,n=e.height;return r.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:t,height:n,viewBox:"0 57 200 100",preserveAspectRatio:"xMidYMin slice"},r.createElement("g",{"data-name":"MS-symbol"},r.createElement("g",{"clip-path":"url(#a)"},r.createElement("path",{d:"M106.214 106.214H71.996V71.996h34.218z",fill:"#f25022"}),r.createElement("path",{d:"M143.993 106.214h-34.218V71.996h34.218z",fill:"#7fba00"}),r.createElement("path",{d:"M106.214 143.993H71.996v-34.218h34.218z",fill:"#00a4ef"}),r.createElement("path",{d:"M143.993 143.993h-34.218v-34.218h34.218z",fill:"#ffb900"}))))}function o(e){var t=e.children,n=e.url,o=e.title,a=e.subtitle,l=e.width;return r.createElement("a",{style:{width:l||"100%",color:"var(--ifm-font-color-base)",textDecoration:"none",display:"flex",alignItems:"center",border:"solid 1px var(--ifm-color-secondary-dark)",padding:"5px",boxShadow:"0px 0px 8px rgba(0,0,0,.1)",borderRadius:"2px"},href:n},r.createElement(i,{width:"50",height:"50"}),r.createElement("span",{style:{display:"flex",flexDirection:"column",margin:"0 0 0 15px"}},r.createElement("span",{style:{lineHeight:"1.1em"}},o),r.createElement("span",{style:{fontSize:".8em"}},a)),t)}}}]);