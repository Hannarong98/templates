"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[9532],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return m}});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=r.createContext({}),p=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),f=p(n),m=i,y=f["".concat(l,".").concat(m)]||f[m]||u[m]||o;return n?r.createElement(y,a(a({ref:t},c),{},{components:n})):r.createElement(y,a({ref:t},c))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=f;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:i,a[1]=s;for(var p=2;p<o;p++)a[p]=n[p];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},3243:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return l},metadata:function(){return p},toc:function(){return c},default:function(){return f}});var r=n(7462),i=n(3366),o=(n(7294),n(3905)),a=["components"],s={title:"TypeScript - ESLint",sidebar_label:"ESLint",slug:"/TypeScript/ESLint",sidebar_position:4},l=void 0,p={unversionedId:"TypeScript/eslint",id:"TypeScript/eslint",isDocsHomePage:!1,title:"TypeScript - ESLint",description:"ESLint is a tool for automatically finding and fixing formatting problems in your JavaScript code, this tool can be configured by VS Code to run on all file save. so you don't need to trigger this yourself. This helps you maintain a certain code style without needing to apply this yourself.",source:"@site/express/TypeScript/eslint.mdx",sourceDirName:"TypeScript",slug:"/TypeScript/ESLint",permalink:"/express/TypeScript/ESLint",editUrl:"https://github.com/Intility/templates/tree/main/docusaurus/express/TypeScript/eslint.mdx",version:"current",sidebarPosition:4,frontMatter:{title:"TypeScript - ESLint",sidebar_label:"ESLint",slug:"/TypeScript/ESLint",sidebar_position:4},sidebar:"express",previous:{title:"Environment Variables",permalink:"/express/TypeScript/environment-variables"}},c=[],u={toc:c};function f(e){var t=e.components,s=(0,i.Z)(e,a);return(0,o.kt)("wrapper",(0,r.Z)({},u,s,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://eslint.org/"},"ESLint")," is a tool for automatically finding and fixing formatting problems in your JavaScript code, this tool can be configured by VS Code to run on all file save. so you don't need to trigger this yourself. This helps you maintain a certain code style without needing to apply this yourself."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://www.npmjs.com/package/eslint"},"ESLint")," - Main ESLint framework."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://www.npmjs.com/package/@typescript-eslint/eslint-plugin"},"@typescript-eslint/eslint-plugin")," - An ESLint plugin which provides lint rules for TypeScript codebases."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://www.npmjs.com/package/@typescript-eslint/parser"},"@typescript-eslint/parser")," - Allows ESLint to lint TypeScript source code.")),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"npm i -D eslint @typescript-eslint/eslint-plugin @typescript-eslint/parser")),(0,o.kt)("p",null,"Create a new ",(0,o.kt)("inlineCode",{parentName:"p"},".eslintrc.json")," file to configure the ESLint framework."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "parser": "@typescript-eslint/parser",\n    "parserOptions": {\n        "ecmaVersion": 2020,\n        "sourceType": "module"\n    },\n    "extends": [\n        "eslint:recommended",\n        "plugin:@typescript-eslint/recommended"\n    ],\n    "rules": {\n        // List of available rules: https://eslint.org/docs/rules/\n        "no-console": ["error", {"allow": ["warn", "error", "info", "table"]}],\n        "quotes": ["warn", "single", { "allowTemplateLiterals": true }],\n        "semi": ["error", "always"],\n        "eol-last": "error",\n        "object-curly-spacing": ["warn", "always"],\n        "array-bracket-spacing": ["warn", "always"],\n        "@typescript-eslint/ban-ts-comment": "off"  \n    }\n}\n')),(0,o.kt)("p",null,"Add two new scripts to ",(0,o.kt)("inlineCode",{parentName:"p"},"package.json"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "scripts": {\n        "lint": "eslint src/**/*.ts",\n        "lint:fix": "eslint src/**/*.ts --fix"\n    }\n}\n')),(0,o.kt)("p",null,"Open user settings for VS Code by entering ",(0,o.kt)("inlineCode",{parentName:"p"},"Ctrl + Shift + P")," and search for ",(0,o.kt)("inlineCode",{parentName:"p"},"Open Settings"),"."),(0,o.kt)("p",null,"If you want to alter the settings for all projects using eslint select ",(0,o.kt)("inlineCode",{parentName:"p"},"Open Settings (JSON)"),". If you only want to alter the settings for this project select ",(0,o.kt)("inlineCode",{parentName:"p"},"Open Workspace Settings (JSON)"),"."),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"VS Code JSON Settings search",src:n(8898).Z})),(0,o.kt)("p",null,"Add the following settings to this file:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n    // Rest of config\n    "editor.codeActionsOnSave": {\n        "source.fixAll.eslint": true,\n        "eslint.autoFixOnSave": true\n    },\n    "eslint.codeAction.showDocumentation": {\n        "enable": true\n    },\n    "eslint.format.enable": true,\n    "eslint.alwaysShowStatus": true,\n}\n')))}f.isMDXComponent=!0},8898:function(e,t,n){t.Z=n.p+"assets/images/vscode-settings-json-1fd21d880a4228c0f19287198a2ff1f1.png"}}]);