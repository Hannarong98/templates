variables:
  SONAR_HOST_URL: https://sonarqube.intility.no
  SONAR_PROJECT: $CI_PROJECT_NAME
  SENTRY_URL: https://sentry.intility.no/
  SENTRY_ORG: intility
  SENTRY_PROJECT: $CI_PROJECT_NAME
  OPENSHIFT_SERVER: openshift.intility.no:8443
  OPENSHIFT_DOMAIN: openshift-inside.intility.no
  OPENSHIFT_PROJECT: $CI_PROJECT_NAME
  # Configure these variables in Secure Variables:
  # SONAR_TOKEN: my.sonarqube.token
  # SENTRY_DSN: my.sentry.dsn
  # SENTRY_AUTH_TOKEN: my.sentry.token
  # OPENSHIFT_TOKEN: my.openshift.token

stages:
  - build
  - test
  - analyze
  - sentry
  - deploy

.npm_deps:
  before_script:
    - npm ci --cache .npm --prefer-offline
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - .npm/

# --- build ---
#
#

build:
  extends: .npm_deps
  image: node:12
  stage: build
  variables:
    REACT_APP_SENTRY_DSN: $SENTRY_DSN
    REACT_APP_SENTRY_ENVIRONMENT: $CI_COMMIT_REF_SLUG
    REACT_APP_SENTRY_RELEASE: $CI_COMMIT_SHORT_SHA
  script:
    - npm run build
  artifacts:
    paths:
      - build
    expire_in: 2 weeks
  only:
    - branches
  except:
    - master

build:production:
  extends: build
  variables:
    REACT_APP_SENTRY_ENVIRONMENT: production
    REACT_APP_REDIRECT_URI: https://$CI_PROJECT_NAME.$OPENSHIFT_DOMAIN
  only:
    - master
  except: []

# --- test ---
test:
  extends: .npm_deps
  image: node:12
  stage: test
  script:
    - npm run test

# --- sonar ---
# https://docs.sonarqube.org/latest/analysis/gitlab-cicd/
# sonar-scanner automatically detects branches, so can run on any branch
# The image automatically passes SONAR_HOST_URL and SONAR_TOKEN to the cli
sonar:
  image: sonarsource/sonar-scanner-cli
  stage: analyze
  variables:
    GIT_DEPTH: 0
  allow_failure: true
  script: sonar-scanner
    -Dsonar.qualitygate.wait=true
    -Dsonar.projectKey=$SONAR_PROJECT
    -Dsonar.projectBaseDir=src/

# --- sentry ---
sentry:
  stage: sentry
  image: getsentry/sentry-cli
  variables:
    SENTRY_ENV: production
  script:
    - sentry-cli releases new $CI_COMMIT_SHORT_SHA
    # uncomment this line if the repository is not integrated with sentry
    - sentry-cli releases set-commits --auto $CI_COMMIT_SHORT_SHA
    - sentry-cli releases files $CI_COMMIT_SHORT_SHA upload-sourcemaps --url-prefix '~' build/static/js --validate --rewrite
    - sentry-cli releases finalize $CI_COMMIT_SHORT_SHA
    - sentry-cli releases deploys $CI_COMMIT_SHORT_SHA new -e $SENTRY_ENV
  retry: 2
  only:
    - master

# --- deployment ---
deploy:production:
  stage: deploy
  image: openshift/origin-cli
  variables:
    APP: production
    APP_HOST: $CI_PROJECT_NAME.$OPENSHIFT_DOMAIN
  environment:
    name: production
    url: https://$CI_PROJECT_NAME.$OPENSHIFT_DOMAIN
  tags:
    - docker
    - linux
  before_script:
    - oc login "$OPENSHIFT_SERVER" --token="$OPENSHIFT_TOKEN" --insecure-skip-tls-verify
    - oc project "$OPENSHIFT_PROJECT" 2> /dev/null
  script:
    - "oc get services $APP 2> /dev/null || oc new-app . --name=$APP --strategy=docker"
    - "oc start-build $APP --from-dir=. --wait=true --follow"
    - "oc get routes $APP 2> /dev/null || oc create route edge --service $APP --hostname=$APP_HOST"
  only:
    - master
